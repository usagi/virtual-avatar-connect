# MODify は内容に変更を加えるプロセッサーです。
[[processors]]
channel_from = "user"
# from と to が同じ場合はこれ以降のプロセッサーへ流れる内容が完全に書き換えられます。
# from と to が異なる場合は変更した内容を to に送るだけの動作になります。
channel_to = "modified"
feature = "modify"

# 英単語をカタカナに変換
# 英語の文章を日本語の音声合成エンジンに読み上げさせる場合などに使うとアルファベットをそのまま読まれるよりはマシなこともあるかもしれません。
alkana = true

# -----------------------------------------------------------------
# 辞書による単純な置換機能
# -----------------------------------------------------------------
# Google IME の辞書エクスポートと同じ形式を読み込めます。
# ↓のように2列でスペース区切りのUTF-8のテキストファイルになっていればOK
# 変換先1(例:よみ) 変換元1(例:記述)
# 変換先2(例:よみ) 変換元2(例:記述)
# 変換先3(例:よみ) 変換元3(例:記述)
# 音声合成エンジンの前処理や、禁止ワードの *SLANG* のような伏せ字化などに使えます。
# ほかにも「です」「ます」→「ですにゃ」「ますにゃ」のような使い方もわりと実用性が高いかもしれません。
# 設定は配列なので複数のファイルを指定できます。もちろん1つから使えます。
# 先に指定してあるほど優先度が高くなります。
# 辞書ファイルのサンプル:
#  https://github.com/usagi/virtual-avatar-connect/blob/main/dictionary.arknights.txt
#  https://github.com/usagi/virtual-avatar-connect/blob/main/dictionary.pre-coeiroink.txt
# -----------------------------------------------------------------
# dictionary_files = [
#  "dictionary1.txt",
#  "dictionary2.txt",
#  "dictionary3.txt",
# ]

# -----------------------------------------------------------------
# 正規表現による置換機能
# -----------------------------------------------------------------
# 変換元を正規表現でマッチさせ、変換先へ置換できる高機能版の辞書ファイル群を指定できます。
# 単純な置き換えだけでは実現しにくい、より複雑な変換を行いたい場合に使えます。
# 厳密にはdictionary で置換後に regex の置換となります。重複設定された読みなどにはご注意下さい。
# regex_files = [
#  "regex-dictionary1.txt",
#  "regex-dictionary2.txt",
#  "regex-dictionary3.txt",
# ]
